name: Obtener último APK de EAS y notificar a Discord

on:
  workflow_dispatch:

jobs:
  get-latest-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Instalar eas-cli
        run: npm install -g eas-cli

      - name: Autenticarse con EAS
        run: eas whoami
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}

      - name: Obtener última URL del APK
        id: get_apk_url
        run: |
          echo "📦 Obteniendo información del último build..."

          BUILD_INFO=$(eas build:list --limit 1 --platform android --json --non-interactive)
          echo "🔍 Build Info: $BUILD_INFO"

          if [ -z "$BUILD_INFO" ]; then
            echo "❌ No se obtuvo información del build."
            exit 1
          fi

          BUILD_COUNT=$(echo "$BUILD_INFO" | jq length)
          if [ "$BUILD_COUNT" -eq 0 ]; then
            echo "❌ No se encontró ningún build."
            exit 1
          fi

          APK_URL=$(echo "$BUILD_INFO" | jq -r '.[0].artifacts.buildUrl')

          if [ -z "$APK_URL" ]; then
            echo "❌ No se encontró la URL del APK."
            exit 1
          fi

          echo "📦 APK URL: $APK_URL"
          echo "apk_url=$APK_URL" >> $GITHUB_OUTPUT
        env:
          EAS_ACCESS_TOKEN: ${{ secrets.EAS_ACCESS_TOKEN }}

      - name: Enviar mensaje a Discord
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"🚀 Se generó un nuevo APK: ${{ steps.get_apk_url.outputs.apk_url }}\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
