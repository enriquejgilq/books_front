name: Obtener último APK de EAS y notificar a Discord

on:
  push:
    branches:
      - test-2  # Cambiar a la rama adecuada, por ejemplo, main

jobs:
  get-latest-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3

      - name: Instalar dependencias
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          npm install -g eas-cli

      - name: Autenticarse con eas login
        run: |
          expect <<EOF
          spawn eas login
          expect "Email address:"
          send "${{ vars.EAS_USERNAME }}\r"
          expect "Password:"
          send "${{ vars.EAS_PASSWORD }}\r"
          expect eof
          EOF
        env:
          EAS_EMAIL: ${{ vars.EAS_EMAIL }}
          EAS_PASSWORD: ${{ vars.EAS_PASSWORD }}

      - name: Obtener última URL del APK
        id: get_apk_url
        run: |
          echo "📦 Obteniendo información del último build..."

          # Intentamos obtener los builds y capturamos el error
          BUILD_INFO=$(eas build:list --limit 1 --platform android --json --non-interactive 2>&1)
          echo "🔍 Build Info Completo: $BUILD_INFO"

          # Verificar si la respuesta está vacía
          if [[ "$BUILD_INFO" == *"Error"* ]]; then
            echo "❌ Error al ejecutar eas build:list: $BUILD_INFO"
            exit 1
          fi

          # Verificar si la respuesta está vacía
          if [ -z "$BUILD_INFO" ]; then
            echo "❌ No se obtuvo información del build."
            exit 1
          fi

          # Verificar el número de builds disponibles
          BUILD_COUNT=$(echo "$BUILD_INFO" | jq length)
          if [ "$BUILD_COUNT" -eq 0 ]; then
            echo "❌ No se encontró ningún build."
            exit 1
          fi

          # Intentar obtener la URL del APK
          APK_URL=$(echo "$BUILD_INFO" | jq -r '.[0].artifacts.buildUrl')

          # Verificar si obtuvimos una URL válida
          if [ -z "$APK_URL" ]; then
            echo "❌ No se encontró la URL del APK."
            exit 1
          fi

          echo "📦 APK URL: $APK_URL"
          echo "apk_url=$APK_URL" >> $GITHUB_OUTPUT

      - name: Enviar mensaje a Discord
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d "{\"content\": \"🚀 Se generó un nuevo APK: ${{ steps.get_apk_url.outputs.apk_url }}\"}" \
          ${{ vars.DISCORD_WEBHOOK_URL }}
